2019년01월21일	월요일	Java [16강]

[3] Method Overriding
- 슈퍼 클래스의 메소드를 서브 클래스에서 재정의하는 것
 (메소드 이름, 인자 타입 및 개수, 리턴 타입 등 동일 적용)
- 접근 지정자는 슈퍼 클래스의 메소드의 접근 지정자 보다 좁아질 수 없습니다.
 (ex 부모:public, 자식:protected이면 문제발생!)
- static, private, final 메소드는 오버라이딩 불가!
- 부모클래스의 메소드는 무시됨!
 (오버라이딩은 부모클래스의 구기능을 없애는 것이 아니라, 유지하면서 자식의 새로운 기능을 교체 목적으로 사용됨!
  ex) 카톡 : 문자 - 임티 - 영상 전송 & 아이폰 업뎃)

- 오버로딩 vs 오버라이딩 차이점!
 오버로딩 - 같은 클래스에서 같은 이름의 메소드가 여러개 정의
	  - 메소드의 매개변수의 타입과 갯수는 달라야한다.
 오버라이딩 - 상속 관계의 두 클래스에서 부모의 메소드가 자식에 재정의
	    - 메소드원형(리턴형,메소드이름,매개변수)이 같아야 된다.

- 업캐스팅된 슈퍼클래스 레퍼런스로 오버라이딩된 메소드 호출(동적 바인딩)
 (타입은 부모로 new는 자식으로 ex) Parent p = new Child();)

- 부모-자식 상속 관계에서
 (부모의 객체를 생성하면 부모만!
 (자식의 객체를 생성하면 *부모,자식 둘 다 생성!*)

[4] 객체 형변환
- 상속 관계에서 부모자시간에 형변환 가능!
- 오버라이딩시, 부모클래스 타입이더라도 자식클래스의 메소드가 호출.(동적 바인딩)
 1. 업캐스팅
- 서브 클래스의 레퍼런스 값을 슈퍼 클래스 타입의 변수에 대입
- 자식 객체 내 접근 불가, 슈퍼 클래스의 멤버에 접근 가능
 (형식 : 부모클래스 변수 = new + 자식클래스)
 (형식 : 자식클래스 객체 생성 후 / 부모클래스 변수 = 자식객체변수) * 더 많이 씀

 2. 다운캐스팅
- 업캐스팅 된 것을 다시 원래대로 되돌리는 것
 (형식 : 자식클래스 (다른자식)변수 = (자식타입) + 부모변수)