2019년1월23일	화요일	[17강] ~ [코딩예제] ~ [18강]

[코딩예제]
1. 업캐스팅 형식
- Object obj = new SubObject();		(메모리생성하면서)업캐스팅
- SubObject sub = new SubObject();	(메모리생성안하면서)업캐스팅
  Objcct obj = sub;

2. 생성자
- 객체를 생성했을 때, 자동으로 호출되는 것이다. ***


	[17강][Abstract]
[1] 추상 클래스
1. 추상 메소드
- 기능이 구현되지 않고, 원형만 선영되어 있는 메소드
- 중괄호 생략(ex abstract public void draw(); )
- 추상 메소드는 서브 클래스에서 오버라이딩하여 구현
- 추상 클래스는 객체를 생성할 수 없음


[2] final
- final는 상속될 수 없다!
- 자식 클래스가 Overriding할 수 없습니다.

[3] 상수 선언 
- 형식: "public static final int 변수명 = 값"
- 고정된 같은 값이 반복해서 쓰이는 경우 상수를 이용!
- public(누구나), static(객체 안 만들고 사용가능), final(변수 값 고정), int(정수 저장)


	[18강][Interface]
[1] Interface
*** 상속과의 차이점 : 상위 클래스로 올라가는 것이 아닌, 구현할 메소드?클래스?가 늘어난다고 생각***

- 상수와 추상메소드로만 이루어짐
- 모든 추상 메소드 앞은 public으로 가정하므로 안 써도 됨!
*** static은 "어떤 객체로든 접근이 가능하다"라는 의미
- 외부에 공개할 메소드를 등록하는 목적으로 사용
- 인터페이스를 구현한 클래스는 인터페이스상에 있는 추상 메소드를 전부 구현해야 함
- 인터페이스는 객체를 만들 수 없음
- A memo;	//A인터페이스형 참조 변수 memo 선언

- 인터페이스는 객체 생성이 안 된다.***
 (ex : ISungkjuk is = new Sungjuk();)	//upcasting